import streamlit as st
import requests
import pandas as pd
from datetime import datetime
import sqlite3
import toml

# Inicializ√°ljuk az adatb√°zist
def init_db():
    conn = sqlite3.connect('weather_logs.db')
    c = conn.cursor()
    c.execute('''
        CREATE TABLE IF NOT EXISTS logs (
            city TEXT,
            temperature REAL,
            humidity REAL,
            wind_speed REAL,
            timestamp DATETIME
        )
    ''')
    conn.commit()
    conn.close()

# Adatok logol√°sa az adatb√°zisba
def log_weather(city, temperature, humidity, wind_speed):
    conn = sqlite3.connect('weather_logs.db')
    c = conn.cursor()
    c.execute('INSERT INTO logs VALUES (?, ?, ?, ?, ?)', 
              (city, temperature, humidity, wind_speed, datetime.now()))
    conn.commit()
    conn.close()

# API kulcs bet√∂lt√©se a teljes el√©r√©si √∫tvonal megad√°s√°val
secrets_path = r"C:\Users\veszperenyine\Documents\GitHub\python_hu\homeworks\nemethmate\8_streamlit\secrets.toml"
secrets = toml.load(secrets_path)
api_key = secrets['api']['key']

# Kezd≈ë oldal
st.title("Id≈ëj√°r√°s Dashboard üå§Ô∏è")

# V√°ros n√©v bek√©r√©se
city = st.text_input("Add meg egy v√°ros nev√©t:")

if city:
    # Aktu√°lis id≈ëj√°r√°s API h√≠v√°s
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric"
    response = requests.get(url)
    
    if response.status_code == 200:
        data = response.json()
        
        # Adatok kinyer√©se az API v√°laszb√≥l
        temp = data['main']['temp']
        humidity = data['main']['humidity']
        wind_speed = data['wind']['speed']
        lat = data['coord']['lat']
        lon = data['coord']['lon']

        # KPI-ok megjelen√≠t√©se
        st.subheader(f"Id≈ëj√°r√°s {city} v√°ros√°ban:")
        col1, col2, col3 = st.columns(3)
        col1.metric("H≈ëm√©rs√©klet (¬∞C)", f"{temp}¬∞C")
        col2.metric("P√°ratartalom (%)", f"{humidity}%")
        col3.metric("Sz√©lsebess√©g (m/s)", f"{wind_speed} m/s")

        # T√©rk√©p megjelen√≠t√©se
        st.map(pd.DataFrame({'lat': [lat], 'lon': [lon]}))

        # Adatok logol√°sa
        log_weather(city, temp, humidity, wind_speed)

        # El≈ërejelz√©s (extra)
        forecast_url = f"http://api.openweathermap.org/data/2.5/forecast?q={city}&appid={api_key}&units=metric"
        forecast_response = requests.get(forecast_url)
        if forecast_response.status_code == 200:
            forecast_data = forecast_response.json()
            st.subheader("3 √≥r√°s id≈ëj√°r√°s el≈ërejelz√©s:")
            for item in forecast_data['list'][:5]:  # Az els≈ë 5 el≈ërejelz√©st mutatjuk
                time = item['dt_txt']
                temp = item['main']['temp']
                desc = item['weather'][0]['description']
                st.write(f"{time}: {temp}¬∞C, {desc}")
        else:
            st.warning("Nem siker√ºlt lek√©rni az el≈ërejelz√©si adatokat.")
    else:
        st.warning("Nem siker√ºlt lek√©rni az id≈ëj√°r√°si adatokat. Ellen≈ërizd a v√°ros nev√©t.")
else:
    st.info("Adj meg egy v√°rosnevet az id≈ëj√°r√°si adatok megtekint√©s√©hez.")

# Az adatb√°zis inicializ√°l√°sa
init_db()
